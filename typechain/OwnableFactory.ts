/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, ContractFactory, Signer} from "ethers";
import {Provider} from "ethers/providers";
import {UnsignedTransaction} from "ethers/utils/transaction";

import {TransactionOverrides} from ".";
import {Ownable} from "./Ownable";

export class OwnableFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<Ownable> {
    return super.deploy(overrides) as Promise<Ownable>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): Ownable {
    return super.attach(address) as Ownable;
  }
  connect(signer: Signer): OwnableFactory {
    return super.connect(signer) as OwnableFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ownable {
    return new Contract(address, _abi, signerOrProvider) as Ownable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnerChanged",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101a7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f2fde38b14610030575b600080fd5b6100566004803603602081101561004657600080fd5b50356001600160a01b0316610058565b005b6100606100b3565b546001600160a01b031633146100a75760405162461bcd60e51b815260040180806020018281038252602781526020018061014b6027913960400191505060405180910390fd5b6100b0816100e3565b50565b604080517727bbb730b136329739ba37b930b3b2973637b1b0ba34b7b760411b8152905190819003601801902090565b60006100ed6100b3565b80546040519192506001600160a01b03808516929116907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c90600090a380546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c652e6f6e6c794f776e65723a206d73672e73656e646572206e6f74206f776e6572a2646970667358221220a3ae29c931b924366637958caf4e4bb7aa79644b63ca2a4174658da95439f09264736f6c63430006040033";
