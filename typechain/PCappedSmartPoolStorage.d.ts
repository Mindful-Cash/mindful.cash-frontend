/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, ContractTransaction, EventFilter, Signer} from "ethers";
import {Listener, Provider} from "ethers/providers";
import {Arrayish, BigNumber, BigNumberish, Interface} from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface PCappedSmartPoolStorageInterface extends Interface {
  functions: {
    pcsSlot: TypedFunctionDescription<{encode([]: []): string}>;
  };

  events: {};
}

export class PCappedSmartPoolStorage extends Contract {
  connect(
    signerOrProvider: Signer | Provider | string
  ): PCappedSmartPoolStorage;
  attach(addressOrName: string): PCappedSmartPoolStorage;
  deployed(): Promise<PCappedSmartPoolStorage>;

  on(event: EventFilter | string, listener: Listener): PCappedSmartPoolStorage;
  once(
    event: EventFilter | string,
    listener: Listener
  ): PCappedSmartPoolStorage;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): PCappedSmartPoolStorage;
  removeAllListeners(eventName: EventFilter | string): PCappedSmartPoolStorage;
  removeListener(eventName: any, listener: Listener): PCappedSmartPoolStorage;

  interface: PCappedSmartPoolStorageInterface;

  functions: {
    pcsSlot(overrides?: TransactionOverrides): Promise<string>;

    "pcsSlot()"(overrides?: TransactionOverrides): Promise<string>;
  };

  pcsSlot(overrides?: TransactionOverrides): Promise<string>;

  "pcsSlot()"(overrides?: TransactionOverrides): Promise<string>;

  filters: {};

  estimate: {
    pcsSlot(overrides?: TransactionOverrides): Promise<BigNumber>;

    "pcsSlot()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };
}
